#include "HX711.h"
#define DOUT  6  
#define CLK  5 
 
HX711 scale(DOUT, CLK);  

void setup() {
  Serial.begin(9600);
  scale.set_scale(); 
  scale.tare();    
}

void loop() {
    float scale_factor=(current_weight); 
  Serial.println(scale_factor);  
}
#include "U8glib.h"   
#include "HX711.h"    
#define RotaryCLK 2   
#define RotaryDT 3    
#define RotarySW 4    

#define CLK 5  
#define DOUT 6  

int reset_screen_counter=0;      
volatile int current_units=0;   
float unit_conversion;          
int decimal_place;               

HX711 scale(DOUT, CLK);  

U8GLIB_SSD1306_128X32 u8g(U8G_I2C_OPT_FAST);	


void rotarydetect ()  {
Rotary_Flag=1;
delay(500);
}



void change_units ()  { 
  if (current_units == 0) current_units=1;
  else if (current_units == 1) current_units=2;
  else if (current_units == 2) current_units=0;
}


void startupscreen(void) {
  u8g.setFont(u8g_font_unifont);
  u8g.firstPage(); 
  do {
    u8g.drawStr( 0, 10, "Clear Scale");
    u8g.drawStr( 0, 28, "Click to zero...");
  } while( u8g.nextPage() );
}


void tare_scale(void) {
  scale.set_scale(-1073000);  
  scale.tare();           
}

void start_scale(void) {
  char temp_current_units[15];  
  String KG="KG";
  String GRAMS="GRAMS";
  String LBS="POUNDS";
  
  if (current_units == 0) {                     
    GRAMS.toCharArray(temp_current_units, 15);  
    unit_conversion=1000;                        
    decimal_place=0;                            
  } else if (current_units == 1) {             
    KG.toCharArray(temp_current_units, 15);
    unit_conversion=1;
    decimal_place=3;
  } else {                                     
    LBS.toCharArray(temp_current_units, 15);
    unit_conversion=2.2046226218;
    decimal_place=3;
  }
  
    u8g.setFont(u8g_font_unifont);
    u8g.firstPage(); 
      do {
        u8g.drawStr( 0, 10, temp_current_units);  
        u8g.setPrintPos(38, 28);
        u8g.print(scale.get_units(3)*unit_conversion, decimal_place);  
 } while( u8g.nextPage() );
}

